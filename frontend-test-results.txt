
> @campaign/frontend@0.1.0 test /storage/programs/campaign_manager/packages/frontend
> bash run-tests.sh WebSocketContext


 RUN  v1.6.1 /storage/programs/campaign_manager/packages/frontend

 ✓ src/components/features/branches/MergePreviewDialog.test.tsx  (45 tests) 2583ms
stdout | Console.group (node:internal/console/constructor:502:7)
🔧 Environment Configuration

stdout | src/config/env.ts:174:11
  Environment: development

stdout | src/config/env.ts:175:11
  API URL: /graphql

stdout | src/config/env.ts:176:11
  WebSocket URL: ws://localhost:9263/graphql

stdout | src/config/env.ts:177:11
  Debug Mode: true

stdout | src/config/env.ts:178:11
  Mock Auth: true

stderr | src/pages/TimelinePage.test.tsx > TimelinePage > Success State > should render timeline with items when data is loaded
Warning: Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?

Check the render method of `TimelinePage`.
    at spy (file:///storage/programs/campaign_manager/node_modules/.pnpm/tinyspy@2.2.1/node_modules/tinyspy/dist/index.js:42:80)
    at ErrorBoundary (/storage/programs/campaign_manager/packages/frontend/src/components/ErrorBoundary.tsx:8:5)
    at div
    at div
    at div
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

stderr | src/pages/TimelinePage.test.tsx > TimelinePage > TICKET-024 Stage 4: Cross-View Selection Integration > should call selectEntity when timeline item is clicked
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

stderr | src/pages/TimelinePage.test.tsx > TimelinePage > TICKET-024 Stage 4: Cross-View Selection Integration > should handle encounter selection
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

stderr | src/pages/TimelinePage.test.tsx > TimelinePage > TICKET-025 Stage 4: EntityInspector Integration > should open EntityInspector for Event when timeline item is clicked
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

stderr | src/pages/TimelinePage.test.tsx > TimelinePage > TICKET-025 Stage 4: EntityInspector Integration > should open EntityInspector for Encounter when timeline item is clicked
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

stderr | src/pages/TimelinePage.test.tsx > TimelinePage > TICKET-025 Stage 4: EntityInspector Integration > should close EntityInspector when onClose is called
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)
Warning: An update to TimelinePage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TimelinePage (/storage/programs/campaign_manager/packages/frontend/src/pages/TimelinePage.tsx:62:45)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

 ✓ src/pages/TimelinePage.test.tsx  (31 tests) 1077ms
stdout | Console.group (node:internal/console/constructor:502:7)
🔧 Environment Configuration

stdout | src/config/env.ts:174:11
  Environment: development

stdout | src/config/env.ts:175:11
  API URL: /graphql

stdout | src/config/env.ts:176:11
  WebSocket URL: ws://localhost:9263/graphql

stdout | src/config/env.ts:177:11
  Debug Mode: true

stdout | src/config/env.ts:178:11
  Mock Auth: true

 ✓ src/components/features/entity-inspector/EntityInspector.test.tsx  (31 tests) 2881ms
 ✓ src/components/features/branches/ConflictResolutionDialog.test.tsx  (34 tests) 2543ms
 ✓ src/components/features/branches/CherryPickDialog.test.tsx  (28 tests) 1367ms
stdout | Console.group (node:internal/console/constructor:502:7)
🔧 Environment Configuration

stdout | src/config/env.ts:174:11
  Environment: development

stdout | src/config/env.ts:175:11
  API URL: /graphql

stdout | src/config/env.ts:176:11
  WebSocket URL: ws://localhost:9263/graphql

stdout | src/config/env.ts:177:11
  Debug Mode: true

stdout | src/config/env.ts:178:11
  Mock Auth: true


<--- Last few GCs --->

[1379722:0x22cef000]    66161 ms: Mark-Compact (reduce) 6143.2 (6144.7) -> 6142.7 (6145.2) MB, pooled: 0 MB, 1151.75 / 0.00 ms  (+ 485.6 ms in 0 steps since start of marking, biggest step 0.0 ms, walltime since start of marking 1875 ms) (average mu = 0.38[1379722:0x22cef000]    68422 ms: Mark-Compact (reduce) 6143.8 (6145.2) -> 6143.2 (6145.7) MB, pooled: 0 MB, 1604.34 / 0.00 ms  (+ 76.2 ms in 0 steps since start of marking, biggest step 0.0 ms, walltime since start of marking 1705 ms) (average mu = 0.326

<--- JS stacktrace --->

FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
----- Native stack trace -----

 1: 0xe98a91 node::OOMErrorHandler(char const*, v8::OOMDetails const&) [node (vitest 1)]
 2: 0x12a46c0 v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [node (vitest 1)]
 3: 0x12a4a5c v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [node (vitest 1)]
 4: 0x1507995  [node (vitest 1)]
 5: 0x151ada2 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node (vitest 1)]
 6: 0x14f38c2 v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node (vitest 1)]
 7: 0x14f3bf8 v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node (vitest 1)]
 8: 0x14cae80 v8::internal::Factory::NewFillerObject(int, v8::internal::AllocationAlignment, v8::internal::AllocationType, v8::internal::AllocationOrigin) [node (vitest 1)]
 9: 0x194ce8b v8::internal::Runtime_AllocateInYoungGeneration(int, unsigned long*, v8::internal::Isolate*) [node (vitest 1)]
10: 0x7f5986e6f276 
stderr | src/components/features/entity-inspector/TypedVariableEditor.test.tsx > TypedVariableEditor > Save Operation > should show loading state during save
Warning: An update to TypedVariableEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TypedVariableEditor (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/TypedVariableEditor.tsx:14:3)
Warning: An update to TypedVariableEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TypedVariableEditor (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/TypedVariableEditor.tsx:14:3)

 ✓ src/components/features/entity-inspector/TypedVariableEditor.test.tsx  (39 tests) 1594ms
 ✓ src/components/features/branches/ForkBranchDialog.test.tsx  (34 tests) 2262ms
 ✓ src/hooks/useWebSocketSubscription.test.tsx  (15 tests) 235ms
 ✓ src/components/features/entity-inspector/StructureListView.test.tsx  (28 tests) 3481ms
stderr | src/components/features/branches/MergeHistoryView.test.tsx > MergeHistoryView > Content Display > should display merge history title and count
Warning: validateDOMNesting(...): <div> cannot appear as a descendant of <p>.
    at div
    at div
    at p
    at /storage/programs/campaign_manager/packages/frontend/src/components/ui/card.tsx:54:61
    at div
    at /storage/programs/campaign_manager/packages/frontend/src/components/ui/card.tsx:27:6
    at div
    at /storage/programs/campaign_manager/packages/frontend/src/components/ui/card.tsx:8:6
    at MergeHistoryCard (/storage/programs/campaign_manager/packages/frontend/src/components/features/branches/MergeHistoryView.tsx:20:3)
    at div
    at div
    at MergeHistoryView (/storage/programs/campaign_manager/packages/frontend/src/components/features/branches/MergeHistoryView.tsx:316:29)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

 ✓ src/components/features/branches/MergeHistoryView.test.tsx  (26 tests) 991ms
 ✓ src/stores/selection-slice.test.ts  (49 tests) 616ms
stderr | src/contexts/WebSocketContext.test.tsx > WebSocketContext > useWebSocket hook > should transition to Error state on connect_error event
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:295:25
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/vitest@1.6.1_@types+node@20.19.21_happy-dom@20.0.5_terser@5.44.0/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

stderr | src/contexts/WebSocketContext.test.tsx > WebSocketContext > useWebSocket hook > should reset reconnect attempts on successful connection
[WebSocket] Connection error Error: Test error
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:326:24
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:325:13
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)

stderr | src/contexts/WebSocketContext.test.tsx > WebSocketContext > Circuit Breaker & Error Resilience > should reset reconnect attempts on successful connection
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:465:26
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:464:15
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:465:26
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:464:15
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:958:5)
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:465:26
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:464:15
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:958:5)

stderr | src/contexts/WebSocketContext.test.tsx > WebSocketContext > Circuit Breaker & Error Resilience > should use exponential backoff for reconnection delays
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:588:26
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:587:15
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)

stderr | src/contexts/WebSocketContext.test.tsx > WebSocketContext > Circuit Breaker & Error Resilience > should use exponential backoff for reconnection delays
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:588:26
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:587:15
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:958:5)
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:588:26
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:587:15
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:958:5)

stderr | src/contexts/WebSocketContext.test.tsx > WebSocketContext > Circuit Breaker & Error Resilience > should use exponential backoff for reconnection delays
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:588:26
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:587:15
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:958:5)
[WebSocket] Connection error Error: Connection failed
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:588:26
    at /storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:48:24
    at act (/storage/programs/campaign_manager/node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js:2512:16)
    at Proxy.<anonymous> (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/act-compat.js:47:25)
    at /storage/programs/campaign_manager/packages/frontend/src/contexts/WebSocketContext.test.tsx:587:15
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:11)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:958:5)

 ✓ src/contexts/WebSocketContext.test.tsx  (20 tests) 353ms
 ✓ src/utils/variable-validation.test.ts  (62 tests) 770ms
stderr | src/components/features/entity-inspector/StructurePanel.test.tsx > StructurePanel > Copy to Clipboard > should reset checkmark after 2 seconds
Warning: An update to StructurePanel inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at StructurePanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/StructurePanel.tsx:82:3)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/StructurePanel.test.tsx:17:29)
Warning: An update to ParentSettlementContext inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at ParentSettlementContext (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/ParentSettlementContext.tsx:18:3)
    at div
    at StructurePanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/StructurePanel.tsx:82:3)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/StructurePanel.test.tsx:17:29)

 ✓ src/components/features/entity-inspector/StructurePanel.test.tsx  (34 tests) 1834ms
 ✓ src/components/features/branches/BranchComparisonView.test.tsx  (18 tests) 3173ms
 ✓ src/components/features/flow/FilterPanel.test.tsx  (19 tests) 971ms
 ✓ src/utils/timeline-filters.test.ts  (51 tests) 713ms
 ✓ src/components/features/entity-inspector/SettlementHierarchyPanel.test.tsx  (30 tests) 1456ms
 ✓ src/stores/campaign-slice.test.ts  (34 tests) 545ms
 ✓ src/components/features/entity-inspector/VersionsTab.test.tsx  (35 tests) 1575ms
 ✓ src/utils/graph-layout.test.ts  (18 tests) 315ms
 ✓ src/components/SelectionInfo.test.tsx  (19 tests) 542ms
 ✓ src/components/features/map/useMapLayers.test.ts  (19 tests) 313ms
 ✓ src/components/features/entity-inspector/KingdomContextPanel.test.tsx  (19 tests) 1392ms
stderr | src/components/features/entity-inspector/AddStructureModal.test.tsx > AddStructureModal > Form Submission > should call onSuccess with structure ID on successful submission
Unknown query named "StructuresBySettlement" requested in refetchQueries options.include array

stderr | src/components/features/entity-inspector/AddStructureModal.test.tsx > AddStructureModal > Form Submission > should call onClose after successful submission
Unknown query named "StructuresBySettlement" requested in refetchQueries options.include array

stderr | src/components/features/entity-inspector/AddStructureModal.test.tsx > AddStructureModal > Form Submission > should disable buttons during submission
Unknown query named "StructuresBySettlement" requested in refetchQueries options.include array

 ✓ src/components/features/entity-inspector/AddStructureModal.test.tsx  (25 tests) 2348ms
stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Point Geometry - Coordinate Extraction > should extract and display coordinates from Point geometry
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Capital City Center',
  description: 'The central plaza',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Capital City Center',
  description: 'The central plaza',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Capital City Center',
  description: 'The central plaza',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Point Geometry - Coordinate Extraction > should format coordinates to 6 decimal places
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Test Location',
  geojson: {
    type: 'Point',
    coordinates: [ -122.123456789, 37.987654321, [length]: 2 ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Test Location',
  geojson: {
    type: 'Point',
    coordinates: [ -122.123456789, 37.987654321, [length]: 2 ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Test Location',
  geojson: {
    type: 'Point',
    coordinates: [ -122.123456789, 37.987654321, [length]: 2 ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Test Location',
  geojson: {
    type: 'Point',
    coordinates: [ -122.123456789, 37.987654321, [length]: 2 ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Polygon Geometry - Coordinate Extraction > should extract coordinates from first point of Polygon geometry
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'region',
  name: 'Kingdom Territory',
  geojson: {
    type: 'Polygon',
    coordinates: [
      [
        [ -122.5, 37.8, [length]: 2 ],
        [ -122.4, 37.8, [length]: 2 ],
        [ -122.4, 37.7, [length]: 2 ],
        [ -122.5, 37.7, [length]: 2 ],
        [ -122.5, 37.8, [length]: 2 ],
        [length]: 5
      ],
      [length]: 1
    ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'region',
  name: 'Kingdom Territory',
  geojson: {
    type: 'Polygon',
    coordinates: [
      [
        [ -122.5, 37.8, [length]: 2 ],
        [ -122.4, 37.8, [length]: 2 ],
        [ -122.4, 37.7, [length]: 2 ],
        [ -122.5, 37.7, [length]: 2 ],
        [ -122.5, 37.8, [length]: 2 ],
        [length]: 5
      ],
      [length]: 1
    ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'region',
  name: 'Kingdom Territory',
  geojson: {
    type: 'Polygon',
    coordinates: [
      [
        [ -122.5, 37.8, [length]: 2 ],
        [ -122.4, 37.8, [length]: 2 ],
        [ -122.4, 37.7, [length]: 2 ],
        [ -122.5, 37.7, [length]: 2 ],
        [ -122.5, 37.8, [length]: 2 ],
        [length]: 5
      ],
      [length]: 1
    ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'region',
  name: 'Kingdom Territory',
  geojson: {
    type: 'Polygon',
    coordinates: [
      [
        [ -122.5, 37.8, [length]: 2 ],
        [ -122.4, 37.8, [length]: 2 ],
        [ -122.4, 37.7, [length]: 2 ],
        [ -122.5, 37.7, [length]: 2 ],
        [ -122.5, 37.8, [length]: 2 ],
        [length]: 5
      ],
      [length]: 1
    ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Invalid Geometry Handling > should display N/A for missing geojson
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Without Geometry',
  geojson: null,
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Without Geometry',
  geojson: null,
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Without Geometry',
  geojson: null,
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Without Geometry',
  geojson: null,
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Invalid Geometry Handling > should disable "Jump to Location" button when no coordinates
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Without Coordinates',
  geojson: {},
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Without Coordinates',
  geojson: {},
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Without Coordinates',
  geojson: {},
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Without Coordinates',
  geojson: {},
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Location Name Display > should display location name when provided
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Grand Palace',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Grand Palace',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Grand Palace',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Grand Palace',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Location Name Display > should display "Unnamed Location" when name is null
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: null,
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: null,
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: null,
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: null,
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Location Type Display > should display location type with capitalization
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'region',
  name: 'Test Location',
  geojson: {
    type: 'Polygon',
    coordinates: [
      [
        [ -122.5, 37.8, [length]: 2 ],
        [ -122.4, 37.8, [length]: 2 ],
        [ -122.4, 37.7, [length]: 2 ],
        [ -122.5, 37.7, [length]: 2 ],
        [ -122.5, 37.8, [length]: 2 ],
        [length]: 5
      ],
      [length]: 1
    ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'region',
  name: 'Test Location',
  geojson: {
    type: 'Polygon',
    coordinates: [
      [
        [ -122.5, 37.8, [length]: 2 ],
        [ -122.4, 37.8, [length]: 2 ],
        [ -122.4, 37.7, [length]: 2 ],
        [ -122.5, 37.7, [length]: 2 ],
        [ -122.5, 37.8, [length]: 2 ],
        [length]: 5
      ],
      [length]: 1
    ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'region',
  name: 'Test Location',
  geojson: {
    type: 'Polygon',
    coordinates: [
      [
        [ -122.5, 37.8, [length]: 2 ],
        [ -122.4, 37.8, [length]: 2 ],
        [ -122.4, 37.7, [length]: 2 ],
        [ -122.5, 37.7, [length]: 2 ],
        [ -122.5, 37.8, [length]: 2 ],
        [length]: 5
      ],
      [length]: 1
    ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'region',
  name: 'Test Location',
  geojson: {
    type: 'Polygon',
    coordinates: [
      [
        [ -122.5, 37.8, [length]: 2 ],
        [ -122.4, 37.8, [length]: 2 ],
        [ -122.4, 37.7, [length]: 2 ],
        [ -122.5, 37.7, [length]: 2 ],
        [ -122.5, 37.8, [length]: 2 ],
        [length]: 5
      ],
      [length]: 1
    ]
  },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Description Display > should display location description when provided
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Ancient Temple',
  description: 'A mysterious temple from the old empire',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Ancient Temple',
  description: 'A mysterious temple from the old empire',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Ancient Temple',
  description: 'A mysterious temple from the old empire',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Settlement Context Display > should display settlement context when settlementName is provided
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Name',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Name',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Name',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Location Name',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Jump to Location Navigation > should navigate to /map when "Jump to Location" is clicked
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Test Location',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Test Location',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Test Location',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Test Location',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

stderr | src/components/features/entity-inspector/LocationContextPanel.test.tsx > LocationContextPanel > Jump to Location Navigation > should enable button only when coordinates are available
Missing field 'description' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Valid Location',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'parentLocationId' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Valid Location',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'deletedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Valid Location',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'archivedAt' while writing result {
  id: 'location-1',
  worldId: 'world-1',
  type: 'point',
  name: 'Valid Location',
  geojson: { type: 'Point', coordinates: [ -122.4194, 37.7749, [length]: 2 ] },
  version: 1,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}

 ✓ src/components/features/entity-inspector/LocationContextPanel.test.tsx  (19 tests) 1389ms
 ✓ src/components/features/entity-inspector/ResolutionDialog.test.tsx  (21 tests) 852ms
stderr | src/components/features/entity-inspector/LevelControl.test.tsx > LevelControl > Level Update - Settlement > should show error toast on failed update
Failed to update level: Error: Version conflict
    at /storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/LevelControl.test.tsx:407:21
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:135:14
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:60:26
    at runTest (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:781:17)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runSuite (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:909:15)
    at runFiles (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:958:5)
    at startTests (file:///storage/programs/campaign_manager/node_modules/.pnpm/@vitest+runner@1.6.1/node_modules/@vitest/runner/dist/index.js:967:3)
    at file:///storage/programs/campaign_manager/node_modules/.pnpm/vitest@1.6.1_@types+node@20.19.21_happy-dom@20.0.5_terser@5.44.0/node_modules/vitest/dist/chunks/runtime-runBaseTests.oAvMKtQC.js:116:7

 ✓ src/components/features/entity-inspector/LevelControl.test.tsx  (19 tests) 931ms
stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Branch Hierarchy Display > should display all branches in the hierarchy
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Branch Hierarchy Display > should display branch descriptions
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Branch Hierarchy Display > should highlight the current branch
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Branch Hierarchy Display > should show branch count in toolbar
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Search Functionality > should have search input field
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Search Functionality > should filter branches by name
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Search Functionality > should filter branches by description
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Search Functionality > should show empty search results message
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Search Functionality > should be case-insensitive
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Search Functionality > should update branch count when filtering
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Branch Selection > should call setCurrentBranch when clicking a non-current branch
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Branch Selection > should not call setCurrentBranch when clicking the current branch
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Interactive Controls > should render React Flow controls for pan/zoom
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Interactive Controls > should render mini-map for navigation
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Interactive Controls > should render background grid
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Branch Metadata > should display diverged date for child branches
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

stderr | src/components/features/branches/BranchHierarchyView.test.tsx > BranchHierarchyView > Branch Metadata > should display created date for all branches
Missing field 'isPinned' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-1',
  name: 'Main Branch',
  description: 'The main timeline',
  campaignId: 'campaign-1',
  parentId: null,
  divergedAt: null,
  createdAt: '2024-01-01T00:00:00Z',
  updatedAt: '2024-01-01T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-2',
  name: 'Alternate Path',
  description: 'What if the party went left?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-15T00:00:00Z',
  createdAt: '2024-01-15T00:00:00Z',
  updatedAt: '2024-01-15T00:00:00Z'
}
Missing field 'isPinned' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'color' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}
Missing field 'tags' while writing result {
  id: 'branch-3',
  name: 'Dark Timeline',
  description: 'What if the villain won?',
  campaignId: 'campaign-1',
  parentId: 'branch-1',
  divergedAt: '2024-01-20T00:00:00Z',
  createdAt: '2024-01-20T00:00:00Z',
  updatedAt: '2024-01-20T00:00:00Z'
}

 ✓ src/components/features/branches/BranchHierarchyView.test.tsx  (22 tests) 2363ms
 ✓ src/components/features/map/geojson-utils.test.ts  (26 tests) 326ms
stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Trigger Button > should open sheet when trigger is clicked
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch List > should display all branches
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch List > should display branch names
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch List > should display branch descriptions when present
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch List > should not display description for branches without description
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch List > should display divergedAt badge for forked branches
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch List > should highlight selected branch
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch List > should indent child branches based on hierarchy depth
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch Selection > should call setCurrentBranch when branch is clicked
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Branch Selection > should close sheet after selecting branch
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Loading State > should display loading skeletons when loading
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Error State > should display error message when query fails
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

stderr | src/components/features/branches/BranchSelector.test.tsx > BranchSelector > Empty State > should display message when no branches exist
Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}.

 ✓ src/components/features/branches/BranchSelector.test.tsx  (19 tests) 973ms
 ✓ src/components/features/branches/DeleteBranchDialog.test.tsx  (26 tests) 938ms
stderr | src/components/features/entity-inspector/EncounterPanel.test.tsx > EncounterPanel > Copy to Clipboard > should reset checkmark after 2 seconds
Warning: An update to EncounterPanel inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at EncounterPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/EncounterPanel.tsx:11:27)

 ✓ src/components/features/entity-inspector/EncounterPanel.test.tsx  (32 tests) 943ms
 ✓ src/components/features/timeline/TimelineFilters.test.tsx  (28 tests) 594ms
stderr | src/services/api/mutations/structures.test.tsx > Structure Mutation Hooks Integration Tests > useCreateStructure > should create a new structure
Unknown query named "StructuresBySettlement" requested in refetchQueries options.include array

stderr | src/services/api/mutations/structures.test.tsx > Structure Mutation Hooks Integration Tests > useCreateStructure > should set loading state during mutation
Unknown query named "StructuresBySettlement" requested in refetchQueries options.include array

stderr | src/services/api/mutations/structures.test.tsx > Structure Mutation Hooks Integration Tests > useDeleteStructure > should delete a structure
Unknown query named "StructuresBySettlement" requested in refetchQueries options.include array

stderr | src/services/api/mutations/structures.test.tsx > Structure Mutation Hooks Integration Tests > useDeleteStructure > should delete with optional branchId
Unknown query named "StructuresBySettlement" requested in refetchQueries options.include array

 ✓ src/services/api/mutations/structures.test.tsx  (16 tests) 470ms
 ✓ src/utils/graph-filters.test.ts  (32 tests) 463ms
stderr | src/services/api/mutations/settlements.test.tsx > Settlement Mutation Hooks Integration Tests > useCreateSettlement > should create a new settlement
Unknown query named "SettlementsByKingdom" requested in refetchQueries options.include array

stderr | src/services/api/mutations/settlements.test.tsx > Settlement Mutation Hooks Integration Tests > useCreateSettlement > should set loading state during mutation
Unknown query named "SettlementsByKingdom" requested in refetchQueries options.include array

stderr | src/services/api/mutations/settlements.test.tsx > Settlement Mutation Hooks Integration Tests > useDeleteSettlement > should delete a settlement
Unknown query named "SettlementsByKingdom" requested in refetchQueries options.include array

stderr | src/services/api/mutations/settlements.test.tsx > Settlement Mutation Hooks Integration Tests > useDeleteSettlement > should delete with optional branchId
Unknown query named "SettlementsByKingdom" requested in refetchQueries options.include array

 ✓ src/services/api/mutations/settlements.test.tsx  (16 tests) 503ms
 ✓ src/components/features/timeline/Timeline.test.tsx  (15 tests) 257ms
 ✓ src/utils/timeline-transforms.test.ts  (19 tests) 245ms
 ✓ src/components/features/entity-inspector/DeleteStructureConfirmationDialog.test.tsx  (39 tests) 1207ms
 ✓ src/components/features/entity-inspector/ParentSettlementContext.test.tsx  (17 tests) 1227ms
stderr | src/components/features/entity-inspector/EventPanel.test.tsx > EventPanel > Copy to Clipboard > should reset checkmark after 2 seconds
Warning: An update to EventPanel inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at EventPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/EventPanel.tsx:11:23)

 ✓ src/components/features/entity-inspector/EventPanel.test.tsx  (31 tests) 1004ms
 ✓ src/stores/auth-slice.test.ts  (30 tests) 380ms
 ✓ src/hooks/useWebSocketCacheSync.test.tsx  (12 tests) 336ms
stdout | Console.group (node:internal/console/constructor:502:7)
🔧 Environment Configuration

stdout | src/config/env.ts:174:11
  Environment: development

stdout | src/config/env.ts:175:11
  API URL: /graphql

stdout | src/config/env.ts:176:11
  WebSocket URL: ws://localhost:9263/graphql

stdout | src/config/env.ts:177:11
  Debug Mode: true

stdout | src/config/env.ts:178:11
  Mock Auth: true

 ✓ src/components/features/entity-inspector/OverviewTab.test.tsx  (20 tests) 2958ms
stderr | src/services/api/hooks/structures.test.tsx > Structure Hooks Integration Tests > useStructureDetails > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/structures.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/structures.test.tsx:15:29)

stderr | src/services/api/hooks/structures.test.tsx > Structure Hooks Integration Tests > useStructureDetails > should handle different structure types correctly
Missing field 'variables' while writing result {
  id: 'structure-2',
  settlementId: 'settlement-1',
  typeId: 'marketplace',
  type: 'marketplace',
  name: 'Central Market',
  level: 2,
  x: 30,
  y: 40,
  orientation: 90,
  isArchived: false,
  archivedAt: null,
  createdAt: '2024-01-01T00:00:00.000Z',
  updatedAt: '2024-01-01T00:00:00.000Z',
  deletedAt: null,
  version: 1,
  computedFields: { trade_bonus: 0.15, capacity: 50 },
  variableSchemas: [ [length]: 0 ]
}

stderr | src/services/api/hooks/structures.test.tsx > Structure Hooks Integration Tests > useStructureDetails > should handle different structure types correctly
Missing field 'variables' while writing result {
  id: 'structure-4',
  settlementId: 'settlement-2',
  typeId: 'temple',
  type: 'temple',
  name: 'Temple of Light',
  level: 1,
  x: 15,
  y: 25,
  orientation: 180,
  isArchived: false,
  archivedAt: null,
  createdAt: '2024-01-02T00:00:00.000Z',
  updatedAt: '2024-01-02T00:00:00.000Z',
  deletedAt: null,
  version: 1,
  computedFields: { faith: 50, healing_rate: 0.1 },
  variableSchemas: [ [length]: 0 ]
}

stderr | src/services/api/hooks/structures.test.tsx > Structure Hooks Integration Tests > useStructureConditions > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/structures.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/structures.test.tsx:15:29)

 ✓ src/services/api/hooks/structures.test.tsx  (17 tests) 1720ms
stderr | src/components/features/entity-inspector/LinksTab.test.tsx > LinksTab > Settlement Links > Parent Entities Display > should display kingdom link
Cache data may be lost when replacing the settlement field of a Query object.

This could cause additional (usually avoidable) network requests to fetch data that were otherwise cached.

To address this problem (which is not a bug in Apollo Client), define a custom merge function for the Query.settlement field, so InMemoryCache can safely merge these objects:

  existing: {
  id: 'settlement-1',
  name: 'Ironhold',
  level: 3,
  x: 100,
  y: 150,
  z: 0,
  campaignId: 'campaign-1',
  kingdomId: 'kingdom-1',
  locationId: 'location-1',
  ownerId: 'user-1',
  isArchived: false,
  archivedAt: null,
  createdAt: '2024-01-01T00:00:00.000Z',
  updatedAt: '2024-01-01T00:00:00.000Z',
  computedFields: { population: 1500, defense: 25 },
  variables: { prosperity: 75, morale: 80, has_walls: true },
  variableSchemas: [
    { name: 'prosperity', type: 'number' },
    { name: 'morale', type: 'number' },
    { name: 'has_walls', type: 'boolean' },
    [length]: 3
  ]
}
  incoming: {
  id: 'settlement-1',
  name: 'Ironhold',
  structures: [
    {
      id: 'structure-1',
      name: 'Main Barracks',
      typeId: 'barracks',
      settlementId: 'settlement-1',
      x: 10,
      y: 20,
      orientation: 0,
      isArchived: false,
      archivedAt: null,
      createdAt: '2024-01-01T00:00:00.000Z',
      updatedAt: '2024-01-01T00:00:00.000Z'
    },
    {
      id: 'structure-2',
      name: 'Central Market',
      typeId: 'marketplace',
      settlementId: 'settlement-1',
      x: 30,
      y: 40,
      orientation: 90,
      isArchived: false,
      archivedAt: null,
      createdAt: '2024-01-01T00:00:00.000Z',
      updatedAt: '2024-01-01T00:00:00.000Z'
    },
    {
      id: 'structure-3',
      name: 'Grand Library',
      typeId: 'library',
      settlementId: 'settlement-1',
      x: 50,
      y: 60,
      orientation: 270,
      isArchived: false,
      archivedAt: null,
      createdAt: '2024-01-01T00:00:00.000Z',
      updatedAt: '2024-01-01T00:00:00.000Z'
    },
    [length]: 3
  ]
}

For more information about these options, please refer to the documentation:

  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers
  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects


 ✓ src/components/features/entity-inspector/LinksTab.test.tsx  (24 tests) 1239ms
stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useUpdateEncounter > should call updateEncounter mutation with correct variables
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:59:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useUpdateEncounter > should call updateEncounter mutation with correct variables
Unknown query named "GetEncountersByCampaign" requested in refetchQueries options.include array
Missing field 'locationId' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Dragon Attack',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'description' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Dragon Attack',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'difficulty' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Dragon Attack',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'isResolved' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Dragon Attack',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'resolvedAt' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Dragon Attack',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'variables' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Dragon Attack',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:59:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useUpdateEncounter > should handle mutation errors
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:98:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useUpdateEncounter > should handle mutation errors
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:98:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useUpdateEncounter > should update multiple fields at once
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:141:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useUpdateEncounter > should update multiple fields at once
Unknown query named "GetEncountersByCampaign" requested in refetchQueries options.include array
Missing field 'locationId' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Updated Encounter',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'description' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Updated Encounter',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'difficulty' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Updated Encounter',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'isResolved' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Updated Encounter',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'resolvedAt' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Updated Encounter',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'variables' while writing result {
  id: 'encounter-1',
  campaignId: 'campaign-1',
  name: 'Updated Encounter',
  scheduledAt: '2024-07-20T14:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:141:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useResolveEncounter > should resolve encounter and return effect execution summaries
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:226:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useResolveEncounter > should resolve encounter and return effect execution summaries
Unknown query named "GetEncountersByCampaign" requested in refetchQueries options.include array
Unknown query named "GetEncounterById" requested in refetchQueries options.include array
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:226:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useResolveEncounter > should handle resolution errors
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:260:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useResolveEncounter > should handle resolution errors
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:260:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useResolveEncounter > should handle partial effect failures during resolution
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:329:26)

stderr | src/services/api/mutations/encounters.test.tsx > Encounter Mutations > useResolveEncounter > should handle partial effect failures during resolution
Unknown query named "GetEncountersByCampaign" requested in refetchQueries options.include array
Unknown query named "GetEncounterById" requested in refetchQueries options.include array
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/encounters.test.tsx:329:26)

 ✓ src/services/api/mutations/encounters.test.tsx  (8 tests) 673ms
 ✓ src/utils/resolution-validation.test.ts  (21 tests) 281ms
 ✓ src/components/features/timeline/TimelineControls.test.tsx  (24 tests) 430ms
stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useUpdateEvent > should call updateEvent mutation with correct variables
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:59:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useUpdateEvent > should call updateEvent mutation with correct variables
Unknown query named "GetEventsByCampaign" requested in refetchQueries options.include array
Missing field 'locationId' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Test Event',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'description' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Test Event',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'eventType' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Test Event',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'occurredAt' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Test Event',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'isCompleted' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Test Event',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'variables' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Test Event',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:59:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useUpdateEvent > should handle mutation errors
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:98:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useUpdateEvent > should handle mutation errors
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:98:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useUpdateEvent > should update multiple fields at once
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:140:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useUpdateEvent > should update multiple fields at once
Unknown query named "GetEventsByCampaign" requested in refetchQueries options.include array
Missing field 'locationId' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Updated Event Name',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'description' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Updated Event Name',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'eventType' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Updated Event Name',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'occurredAt' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Updated Event Name',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'isCompleted' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Updated Event Name',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Missing field 'variables' while writing result {
  id: 'event-1',
  campaignId: 'campaign-1',
  name: 'Updated Event Name',
  scheduledAt: '2024-07-15T10:00:00Z',
  updatedAt: '2024-06-15T12:00:00Z'
}
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:140:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useCompleteEvent > should complete event and return effect execution summaries
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:224:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useCompleteEvent > should complete event and return effect execution summaries
Unknown query named "GetEventsByCampaign" requested in refetchQueries options.include array
Unknown query named "GetEventById" requested in refetchQueries options.include array
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:224:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useCompleteEvent > should handle completion errors
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:258:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useCompleteEvent > should handle completion errors
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:258:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useCompleteEvent > should handle partial effect failures
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:324:26)

stderr | src/services/api/mutations/events.test.tsx > Event Mutations > useCompleteEvent > should handle partial effect failures
Unknown query named "GetEventsByCampaign" requested in refetchQueries options.include array
Unknown query named "GetEventById" requested in refetchQueries options.include array
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at MockedProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/testing/react/MockedProvider.js:8:9)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/mutations/events.test.tsx:324:26)

 ✓ src/services/api/mutations/events.test.tsx  (8 tests) 607ms
stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Settlement Attributes Section > should render settlement attributes section header
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Settlement Attributes Section > should display kingdom ID
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Settlement Attributes Section > should display campaign ID
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Settlement Attributes Section > should display level
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Settlement Attributes Section > should display owner ID
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Settlement Attributes Section > should display archived status
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Typed Variables Section > should render typed variables section header
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Typed Variables Section > should display number variables
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Typed Variables Section > should display boolean variables
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Typed Variables Section > should convert snake_case to Title Case
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Typed Variables Section > should display empty state when no variables exist
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Typed Variables Section > should display empty state when variables is undefined
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Typed Variables Section > should format object variables as JSON
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Copy to Clipboard > should copy field value to clipboard when copy button is clicked
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Copy to Clipboard > should show checkmark after successful copy
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Copy to Clipboard > should reset checkmark after 2 seconds
Warning: An update to SettlementPanel inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at SettlementPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.tsx:20:3)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.test.tsx:19:29)
Warning: An update to KingdomContextPanel inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at KingdomContextPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/KingdomContextPanel.tsx:15:32)
    at div
    at SettlementPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.tsx:20:3)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.test.tsx:19:29)
Warning: An update to SettlementHierarchyPanel inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at SettlementHierarchyPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementHierarchyPanel.tsx:124:3)
    at div
    at SettlementPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.tsx:20:3)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.test.tsx:19:29)
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
Warning: An update to KingdomContextPanel inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at KingdomContextPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/KingdomContextPanel.tsx:15:32)
    at div
    at SettlementPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.tsx:20:3)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.test.tsx:19:29)
Warning: An update to LocationContextPanel inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at LocationContextPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/LocationContextPanel.tsx:17:33)
    at div
    at SettlementPanel (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.tsx:20:3)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/components/features/entity-inspector/SettlementPanel.test.tsx:19:29)

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Value Formatting > should format null values as "N/A"
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Value Formatting > should format undefined values as "N/A"
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Value Formatting > should format boolean false correctly
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Accessibility > should have proper labels for all fields
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

stderr | src/components/features/entity-inspector/SettlementPanel.test.tsx > SettlementPanel > Accessibility > should have title attribute on copy buttons
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetKingdomById","variables":{"id":"kingdom-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetKingdomById($id: ID!) {\n  kingdom(id: $id) {\n    id\n    campaignId\n    name\n    level\n    variables\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests
[MSW] Error: intercepted a request without a matching request handler:

  • POST /graphql

  • Request body: {"operationName":"GetLocationDetails","variables":{"id":"location-1"},"extensions":{"clientLibrary":{"name":"@apollo/client","version":"4.0.7"}},"query":"query GetLocationDetails($id: ID!) {\n  location(id: $id) {\n    id\n    worldId\n    type\n    name\n    description\n    parentLocationId\n    geojson\n    version\n    createdAt\n    updatedAt\n    deletedAt\n    archivedAt\n    __typename\n  }\n}"}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/http/intercepting-requests

 ✓ src/components/features/entity-inspector/SettlementPanel.test.tsx  (22 tests) 1436ms
 ✓ src/utils/graph-selection.test.ts  (25 tests) 299ms
 ✓ src/components/features/map/Map.test.tsx  (23 tests) 984ms
 ✓ src/components/features/map/useLocationLayers.test.ts  (11 tests) 179ms
 ✓ src/components/features/map/useSettlementLayers.test.ts  (10 tests) 159ms
stderr | src/services/api/hooks/effects.test.tsx > Effect Hooks Integration Tests > useEffectsForEntity > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/effects.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/effects.test.tsx:15:29)

stderr | src/services/api/hooks/effects.test.tsx > Effect Hooks Integration Tests > useAllEffectsForEntity > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/effects.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/effects.test.tsx:15:29)

 ✓ src/services/api/hooks/effects.test.tsx  (14 tests) 1263ms
stderr | src/services/api/hooks/settlements.test.tsx > Settlement Hooks Integration Tests > useSettlementsByKingdom > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/settlements.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/settlements.test.tsx:15:29)

stderr | src/services/api/hooks/settlements.test.tsx > Settlement Hooks Integration Tests > useSettlementDetails > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/settlements.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/settlements.test.tsx:15:29)

stderr | src/services/api/hooks/settlements.test.tsx > Settlement Hooks Integration Tests > useStructuresBySettlement > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/settlements.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/settlements.test.tsx:15:29)

 ✓ src/services/api/hooks/settlements.test.tsx  (15 tests) 1305ms
stderr | src/services/api/hooks/encounters.test.tsx > Encounter Hooks Integration Tests > useEncountersByCampaign > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/encounters.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/encounters.test.tsx:15:29)

stderr | src/services/api/hooks/encounters.test.tsx > Encounter Hooks Integration Tests > useEncounterDetails > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/encounters.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/encounters.test.tsx:15:29)

 ✓ src/services/api/hooks/encounters.test.tsx  (14 tests) 1206ms
 ✓ src/components/features/entity-inspector/ConditionsTab.test.tsx  (22 tests) 1080ms
 ✓ src/utils/geometry-validation.test.ts  (25 tests) 330ms
stderr | src/hooks/useTimelineReschedule.test.tsx > useTimelineReschedule > should reschedule an event with valid date
Unknown query named "GetEventsByCampaign" requested in refetchQueries options.include array

stderr | src/hooks/useTimelineReschedule.test.tsx > useTimelineReschedule > should reschedule an encounter with valid date
Unknown query named "GetEncountersByCampaign" requested in refetchQueries options.include array

stderr | src/hooks/useTimelineReschedule.test.tsx > useTimelineReschedule > should work without currentWorldTime (no past validation)
Unknown query named "GetEventsByCampaign" requested in refetchQueries options.include array

 ✓ src/hooks/useTimelineReschedule.test.tsx  (8 tests) 409ms
 ✓ src/components/features/map/LayerControls.test.tsx  (16 tests) 403ms
stderr | src/services/api/hooks/conditions.test.tsx > Condition Hooks Integration Tests > useConditionsForEntity > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)

stderr | src/services/api/hooks/conditions.test.tsx > Condition Hooks Integration Tests > useEvaluateCondition > should evaluate a condition with context
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)

stderr | src/services/api/hooks/conditions.test.tsx > Condition Hooks Integration Tests > useEvaluateCondition > should include evaluation trace
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)

stderr | src/services/api/hooks/conditions.test.tsx > Condition Hooks Integration Tests > useEvaluateCondition > should return error for non-existent condition
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)

stderr | src/services/api/hooks/conditions.test.tsx > Condition Hooks Integration Tests > useEvaluateCondition > should use network-only fetch policy
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)

stderr | src/services/api/hooks/conditions.test.tsx > Condition Hooks Integration Tests > useEvaluateCondition > should use network-only fetch policy
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/conditions.test.tsx:15:29)

 ✓ src/services/api/hooks/conditions.test.tsx  (11 tests) 779ms
 ✓ src/components/features/entity-inspector/EffectsTab.test.tsx  (23 tests) 1151ms
 ✓ src/components/features/map/time-filter.test.ts  (22 tests) 338ms
stderr | src/services/api/hooks/events.test.tsx > Event Hooks Integration Tests > useEventsByCampaign > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/events.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/events.test.tsx:15:29)

stderr | src/services/api/hooks/events.test.tsx > Event Hooks Integration Tests > useEventDetails > should provide refetch function
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/events.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/events.test.tsx:15:29)

 ✓ src/services/api/hooks/events.test.tsx  (13 tests) 1205ms
 ✓ src/utils/geometry.test.ts  (28 tests) 443ms
 ✓ src/components/features/map/TimeScrubber.test.tsx  (16 tests) 393ms
 ✓ src/utils/node-navigation.test.ts  (27 tests) 397ms
stdout | Console.group (node:internal/console/constructor:502:7)
🔧 Environment Configuration

stdout | src/config/env.ts:174:11
  Environment: development

stdout | src/config/env.ts:175:11
  API URL: /graphql

stdout | src/config/env.ts:176:11
  WebSocket URL: ws://localhost:9263/graphql

stdout | src/config/env.ts:177:11
  Debug Mode: true

stdout | src/config/env.ts:178:11
  Mock Auth: true

stderr | src/pages/MapPage.test.tsx > MapPage > Selection Integration (TICKET-024) > should call selectEntity when settlement clicked without modifier keys
Warning: An update to MapPage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at MapPage (/storage/programs/campaign_manager/packages/frontend/src/pages/MapPage.tsx:14:57)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)
Warning: An update to MapPage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at MapPage (/storage/programs/campaign_manager/packages/frontend/src/pages/MapPage.tsx:14:57)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

stderr | src/pages/MapPage.test.tsx > MapPage > Selection Integration (TICKET-024) > should call selectEntity when structure clicked without modifier keys
Warning: An update to MapPage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at MapPage (/storage/programs/campaign_manager/packages/frontend/src/pages/MapPage.tsx:14:57)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)
Warning: An update to MapPage inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at MapPage (/storage/programs/campaign_manager/packages/frontend/src/pages/MapPage.tsx:14:57)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Router (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:6066:13)
    at BrowserRouter (file:///storage/programs/campaign_manager/node_modules/.pnpm/react-router@7.9.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs:9209:3)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:55:22)

 ✓ src/pages/MapPage.test.tsx  (18 tests) 644ms
stderr | src/hooks/useTimelineData.test.tsx > useTimelineData Hook Integration Tests > should provide refetch function to reload data
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/hooks/useTimelineData.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/hooks/useTimelineData.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/hooks/useTimelineData.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/hooks/useTimelineData.test.tsx:15:29)

 ✓ src/hooks/useTimelineData.test.tsx  (10 tests) 870ms
 ✓ src/components/features/flow/SelectionPanel.test.tsx  (15 tests) 386ms
 ✓ src/components/features/entity-inspector/ResolutionButton.test.tsx  (22 tests) 576ms
 ✓ src/components/features/flow/CustomNode.test.tsx  (10 tests) 311ms
stdout | src/utils/timeline-transforms.performance.test.ts > Timeline Transformation Performance > should handle 100 items in <2.5 seconds
100 items transformed in 0.33ms

stdout | src/utils/timeline-transforms.performance.test.ts > Timeline Transformation Performance > should handle 200 items in <3 seconds
200 items transformed in 0.13ms

stdout | src/utils/timeline-transforms.performance.test.ts > Timeline Transformation Performance > should handle 500 items in <5 seconds
500 items transformed in 0.29ms

stdout | src/utils/timeline-transforms.performance.test.ts > Timeline Transformation Performance > should scale linearly with item count
Scaling ratios (averaged over 10 runs): 100→200 = 1.65x, 200→500 = 1.77x

stdout | src/utils/timeline-transforms.performance.test.ts > Timeline Transformation Performance > should handle all null dates efficiently
200 null-date items filtered in 0.02ms

stdout | src/utils/timeline-transforms.performance.test.ts > Timeline Transformation Performance > should handle overdue detection with large datasets
200 items with overdue detection transformed in 0.38ms (35 overdue)

 ✓ src/utils/timeline-transforms.performance.test.ts  (6 tests) 96ms
 ✓ src/components/features/map/EntityPopupContent.test.tsx  (10 tests) 198ms
stderr | src/services/api/hooks/dependency-graph.test.tsx > useDependencyGraph > should allow manual refetch
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/dependency-graph.test.tsx:15:29)
Warning: An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at TestComponent (/storage/programs/campaign_manager/node_modules/.pnpm/@testing-library+react@16.3.0_@testing-library+dom@10.4.1_@types+react-dom@18.3.7_@type_59c0e11b10e1a70d511ef984e8664550/node_modules/@testing-library/react/dist/pure.js:329:5)
    at ApolloProvider (file:///storage/programs/campaign_manager/node_modules/.pnpm/@apollo+client@4.0.7_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.0__graphql@16.11.0_react-_9a54f16b6ee9164d81c43041b4cb26e8/node_modules/@apollo/client/react/context/ApolloProvider.js:4:34)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/services/api/hooks/dependency-graph.test.tsx:15:29)

 ✓ src/services/api/hooks/dependency-graph.test.tsx  (9 tests) 771ms
 ✓ src/components/features/entity-inspector/LevelChangeConfirmationDialog.test.tsx  (19 tests) 533ms
 ✓ src/components/features/flow/FlowControls.test.tsx  (18 tests) 393ms
 ✓ src/components/ErrorBoundary.test.tsx  (12 tests) 337ms
 ✓ src/components/features/map/useEntityPopup.test.tsx  (9 tests) 211ms
stdout | src/utils/__tests__/graph-layout.performance.test.ts > Graph Layout Performance > should transform 100-node graph in <2500ms
100 nodes transformed in 133.73ms

stdout | src/utils/__tests__/graph-layout.performance.test.ts > Graph Layout Performance > should transform 200-node graph in <3000ms
200 nodes transformed in 270.51ms

stdout | src/utils/__tests__/graph-layout.performance.test.ts > Graph Layout Performance > should transform 500-node graph in <7500ms
500 nodes transformed in 1732.32ms

stdout | src/utils/__tests__/graph-layout.performance.test.ts > Graph Layout Performance > should handle graphs with cycles efficiently
100 nodes with cycles transformed in 69.20ms

stdout | src/utils/__tests__/graph-layout.performance.test.ts > Graph Layout Performance > should handle disconnected graphs efficiently
200 nodes (disconnected) transformed in 80.49ms

 ✓ src/utils/__tests__/graph-layout.performance.test.ts  (7 tests) 2700ms
 ✓ src/utils/timeline-validation.test.ts  (11 tests) 123ms
 ✓ src/components/features/map/useStructureLayers.test.ts  (5 tests) 93ms
stdout | src/components/features/entity-inspector/__tests__/StructureListView.performance.test.tsx > StructureListView - Performance > should render 50 structures in less than 100ms
Render time for 50 structures: 51.79ms

stdout | src/components/features/entity-inspector/__tests__/StructureListView.performance.test.tsx > StructureListView - Performance > should render 100 structures in less than 200ms
Render time for 100 structures: 11.11ms

stdout | src/components/features/entity-inspector/__tests__/StructureListView.performance.test.tsx > StructureListView - Performance > should render 200 structures in less than 500ms
Render time for 200 structures: 26.54ms

 ✓ src/components/features/entity-inspector/__tests__/StructureListView.performance.test.tsx  (5 tests) 361ms
 ✓ src/components/features/map/ErrorMessage.test.tsx  (14 tests) 294ms
stderr | src/components/features/flow/CustomEdge.test.tsx > CustomEdge > renders edge path
Warning: The tag <path> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at path
    at BaseEdge (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:2467:21)
    at CustomEdgeComponent (/storage/programs/campaign_manager/packages/frontend/src/components/features/flow/CustomEdge.tsx:8:3)
    at BatchProvider (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:963:26)
    at ReactFlowProvider (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:3536:44)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:74:22)

 ✓ src/components/features/flow/CustomEdge.test.tsx  (11 tests) 385ms
 ✓ src/components/features/map/EmptyState.test.tsx  (10 tests) 194ms
 ✓ src/components/features/map/LoadingSpinner.test.tsx  (11 tests) 207ms
 ✓ src/components/features/flow/ConditionNode.test.tsx  (4 tests) 139ms
 ✓ src/components/features/flow/FlowToolbar.test.tsx  (8 tests) 225ms
 ✓ src/components/features/flow/EffectNode.test.tsx  (4 tests) 123ms
 ✓ src/components/features/flow/VariableNode.test.tsx  (4 tests) 135ms
 ✓ src/components/features/flow/EntityNode.test.tsx  (4 tests) 132ms
stderr | src/components/features/flow/WritesEdge.test.tsx > WritesEdge > renders edge path
Warning: The tag <path> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at path
    at BaseEdge (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:2467:21)
    at CustomEdgeComponent (/storage/programs/campaign_manager/packages/frontend/src/components/features/flow/CustomEdge.tsx:8:3)
    at WritesEdgeComponent
    at BatchProvider (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:963:26)
    at ReactFlowProvider (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:3536:44)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:74:22)

 ✓ src/components/features/flow/WritesEdge.test.tsx  (6 tests) 205ms
stderr | src/components/features/flow/ReadsEdge.test.tsx > ReadsEdge > renders edge path
Warning: The tag <path> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at path
    at BaseEdge (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:2467:21)
    at CustomEdgeComponent (/storage/programs/campaign_manager/packages/frontend/src/components/features/flow/CustomEdge.tsx:8:3)
    at ReadsEdgeComponent
    at BatchProvider (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:963:26)
    at ReactFlowProvider (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:3536:44)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:74:22)

 ✓ src/components/features/flow/ReadsEdge.test.tsx  (5 tests) 147ms
stderr | src/components/features/flow/DependsOnEdge.test.tsx > DependsOnEdge > renders edge path
Warning: The tag <path> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at path
    at BaseEdge (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:2467:21)
    at CustomEdgeComponent (/storage/programs/campaign_manager/packages/frontend/src/components/features/flow/CustomEdge.tsx:8:3)
    at DependsOnEdgeComponent
    at BatchProvider (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:963:26)
    at ReactFlowProvider (/storage/programs/campaign_manager/node_modules/.pnpm/@xyflow+react@12.8.6_@types+react@18.3.26_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@xyflow/react/dist/esm/index.js:3536:44)
    at Wrapper (/storage/programs/campaign_manager/packages/frontend/src/__tests__/utils/test-utils.tsx:74:22)

 ✓ src/components/features/flow/DependsOnEdge.test.tsx  (5 tests) 177ms

⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 2 unhandled errors during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯⎯⎯ Unhandled Error ⎯⎯⎯⎯⎯⎯⎯
Error: Cannot find package 'jsdom' imported from /storage/programs/campaign_manager/node_modules/.pnpm/vitest@1.6.1_@types+node@20.19.21_happy-dom@20.0.5_terser@5.44.0/node_modules/vitest/dist/vendor/index.GVFv9dZ0.js
 ❯ Object.getPackageJSONURL node:internal/modules/package_json_reader:267:9
 ❯ packageResolve node:internal/modules/esm/resolve:768:81
 ❯ moduleResolve node:internal/modules/esm/resolve:854:18
 ❯ defaultResolve node:internal/modules/esm/resolve:984:11
 ❯ ModuleLoader.defaultResolve node:internal/modules/esm/loader:780:12
 ❯ ModuleLoader.#cachedDefaultResolve node:internal/modules/esm/loader:704:25
 ❯ ModuleLoader.resolve node:internal/modules/esm/loader:687:38
 ❯ ModuleLoader.getModuleJobForImport node:internal/modules/esm/loader:305:38
 ❯ onImport.tracePromise.__proto__ node:internal/modules/esm/loader:643:36
 ❯ TracingChannel.tracePromise node:diagnostics_channel:344:14

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_MODULE_NOT_FOUND' }

⎯⎯⎯⎯⎯⎯ Unhandled Error ⎯⎯⎯⎯⎯⎯⎯
Error: Worker exited unexpectedly
 ❯ ChildProcess.<anonymous> ../../node_modules/.pnpm/tinypool@0.8.4/node_modules/tinypool/dist/esm/index.js:185:34
 ❯ ChildProcess.emit node:events:519:35
 ❯ ChildProcess._handle.onexit node:internal/child_process:294:12

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 Test Files  98 passed (99)
      Tests  1941 passed (1970)
     Errors  2 errors
   Start at  10:07:58
   Duration  262.21s (transform 3.67s, setup 22.94s, collect 29.08s, tests 83.96s, environment 29.28s, prepare 7.33s)

✓ Tests passed successfully (worker crash at end is known issue)
  Passed: 1941 tests across 98 files
  The worker crash occurs after all tests complete due to memory accumulation
